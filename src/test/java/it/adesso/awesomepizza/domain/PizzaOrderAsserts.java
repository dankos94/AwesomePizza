package it.adesso.awesomepizza.domain;

import static it.adesso.awesomepizza.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class PizzaOrderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPizzaOrderAllPropertiesEquals(PizzaOrder expected, PizzaOrder actual) {
        assertPizzaOrderAutoGeneratedPropertiesEquals(expected, actual);
        assertPizzaOrderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPizzaOrderAllUpdatablePropertiesEquals(PizzaOrder expected, PizzaOrder actual) {
        assertPizzaOrderUpdatableFieldsEquals(expected, actual);
        assertPizzaOrderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPizzaOrderAutoGeneratedPropertiesEquals(PizzaOrder expected, PizzaOrder actual) {
        assertThat(expected)
            .as("Verify PizzaOrder auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPizzaOrderUpdatableFieldsEquals(PizzaOrder expected, PizzaOrder actual) {
        assertThat(expected)
            .as("Verify PizzaOrder relevant properties")
            .satisfies(e -> assertThat(e.getOrderDate()).as("check orderDate").isEqualTo(actual.getOrderDate()))
            .satisfies(e ->
                assertThat(e.getTotalPrice()).as("check totalPrice").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getTotalPrice())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPizzaOrderUpdatableRelationshipsEquals(PizzaOrder expected, PizzaOrder actual) {
        assertThat(expected)
            .as("Verify PizzaOrder relationships")
            .satisfies(e -> assertThat(e.getPayment()).as("check payment").isEqualTo(actual.getPayment()))
            .satisfies(e -> assertThat(e.getOrderStatus()).as("check orderStatus").isEqualTo(actual.getOrderStatus()))
            .satisfies(e -> assertThat(e.getDishes()).as("check dishes").isEqualTo(actual.getDishes()));
    }
}
